{"ast":null,"code":"var _jsxFileName = \"/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx\";\nimport React, { Component } from 'react';\nimport DateInput from 'react-input-date';\nimport api from '../api';\nimport moment from 'moment';\nimport Collapsible from 'react-collapsible';\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport ReactSlider from 'react-slider';\nimport styled from 'styled-components';\nimport IngredientTable from '../components/IngredientTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h2.attrs({\n  className: 'h2'\n})``;\n_c = Title;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 0 30px;\n`;\n_c2 = Wrapper;\nconst Label = styled.label`\n    margin: 5px;\n`;\n_c3 = Label;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\n_c4 = InputText;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c5 = Button;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c6 = CancelButton;\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 25px;\n`;\nconst StyledThumb = styled.div`\n    height: 25px;\n    line-height: 25px;\n    width: 25px;\n    text-align: center;\n    background-color: #000;\n    color: #fff;\n    border-radius: 50%;\n    cursor: grab;\n`;\n_c7 = StyledThumb;\n\nconst Thumb = (props, state) => /*#__PURE__*/_jsxDEV(StyledThumb, { ...props,\n  children: state.valueNow\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 33\n}, this);\n\n_c8 = Thumb;\nconst StyledTrack = styled.div`\n    top: 0;\n    bottom: 0;\n    background: ${props => props.index === 2 ? '#ff0000' : props.index === 1 ? '#ff0000' : '#ff0000'};\n    border-radius: 999px;\n`;\n_c9 = StyledTrack;\n\nconst Track = (props, state) => /*#__PURE__*/_jsxDEV(StyledTrack, { ...props,\n  index: state.index\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 33\n}, this);\n\n_c10 = Track;\n\nclass BatchUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputDate = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.handleUpdateBatch = async () => {\n      const {\n        id,\n        name,\n        date\n      } = this.state;\n      const payload = {\n        name,\n        date\n      };\n      var now = new Date();\n      var dateString = moment(now).format('DD-MM-YYYY');\n      await api.updateBatchById(id, payload).then(res => {\n        window.alert(`Batch updated successfully`);\n        this.setState({\n          name: '',\n          date: dateString\n        });\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        id\n      } = this.state;\n      const batch = await api.getBatchById(id);\n      var now = new Date();\n      var dateString = moment(now).format('DD-MM-YYYY');\n      debugger;\n      this.setState({\n        name: batch.data.data.name,\n        date: dateString\n      });\n    };\n\n    var _now = new Date();\n\n    var _dateString = moment(_now).format('DD-MM-YYYY');\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      date: _dateString\n    };\n  }\n\n  render() {\n    const {\n      name,\n      date\n    } = this.state;\n    debugger;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Update Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        type: \"text\",\n        value: name,\n        onChange: this.handleChangeInputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        date: date,\n        format: \"DDMMYYYY\",\n        separator: \"-\",\n        onChange: this.handleChangeInputDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleUpdateBatch,\n        children: \"Update Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n        href: '/batches/list',\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      name,\n      date,\n      heat\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Collapsible, {\n        trigger: \"Create Batch\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Batch Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(InputText, {\n                type: \"text\",\n                placeholder: \"Batch name\",\n                value: name,\n                onChange: this.handleChangeInputName,\n                onKeyDown: this.handleKeyDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              xsOffset: 2,\n              children: /*#__PURE__*/_jsxDEV(DateInput, {\n                date: date,\n                format: \"DDMMYYYY\",\n                separator: \"-\",\n                onChange: this.handleChangeInputDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Heat (Mild <-> Spicy)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 5,\n              children: /*#__PURE__*/_jsxDEV(ReactSlider, {\n                className: \"horizontal-slider\",\n                value: heat,\n                onChange: this.handleChangeHeat,\n                renderTrack: Track,\n                renderThumb: Thumb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(IngredientTable, {\n                onIngredientsChange: this.handleChangeIngredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleIncludeBatch,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BatchUpdate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"InputText\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"CancelButton\");\n$RefreshReg$(_c7, \"StyledThumb\");\n$RefreshReg$(_c8, \"Thumb\");\n$RefreshReg$(_c9, \"StyledTrack\");\n$RefreshReg$(_c10, \"Track\");","map":{"version":3,"sources":["/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx"],"names":["React","Component","DateInput","api","moment","Collapsible","Grid","Row","Col","ReactSlider","styled","IngredientTable","Title","h2","attrs","className","Wrapper","div","Label","label","InputText","input","Button","button","CancelButton","a","StyledSlider","StyledThumb","Thumb","props","state","valueNow","StyledTrack","index","Track","BatchUpdate","constructor","handleChangeInputName","event","name","target","value","setState","handleChangeInputDate","newDate","date","handleUpdateBatch","id","payload","now","Date","dateString","format","updateBatchById","then","res","window","alert","componentDidMount","batch","getBatchById","data","match","params","render","heat","handleKeyDown","handleChangeHeat","handleChangeIngredients","handleIncludeBatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DateInput from 'react-input-date'\nimport api from '../api'\nimport moment from 'moment';\nimport Collapsible from 'react-collapsible';\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport ReactSlider from 'react-slider'\n\nimport styled from 'styled-components'\nimport IngredientTable from '../components/IngredientTable';\n\nconst Title = styled.h2.attrs({\n    className: 'h2',\n})``\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 0 30px;\n`\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 25px;\n`;\n\nconst StyledThumb = styled.div`\n    height: 25px;\n    line-height: 25px;\n    width: 25px;\n    text-align: center;\n    background-color: #000;\n    color: #fff;\n    border-radius: 50%;\n    cursor: grab;\n`;\n\nconst Thumb = (props, state) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\n\nconst StyledTrack = styled.div`\n    top: 0;\n    bottom: 0;\n    background: ${props => props.index === 2 ? '#ff0000' : props.index === 1 ? '#ff0000' : '#ff0000'};\n    border-radius: 999px;\n`;\n\nconst Track = (props, state) => <StyledTrack {...props} index={state.index} />;\n\nclass BatchUpdate extends Component {\n    constructor(props) {\n        super(props)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            date: dateString,\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputDate = (newDate) => {\n        this.setState({ date: newDate })\n    }\n\n    handleUpdateBatch = async () => {\n        const { id, name, date } = this.state\n        const payload = { name, date }\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        await api.updateBatchById(id, payload).then(res => {\n            window.alert(`Batch updated successfully`)\n            this.setState({\n                name: '',\n                date: dateString,\n            })\n        })\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.state\n        const batch = await api.getBatchById(id)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\t\t\n\t\tdebugger;\n        this.setState({\n            name: batch.data.data.name,\n            date: dateString,\n        })\n    }\n\n    render() {\n        const { name, date } = this.state\n        debugger;\n        return (\n            <Wrapper>\n                <Title>Update Batch</Title>\n\n                <Label>Name: </Label>\n                <InputText\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChangeInputName}\n                />\n\n                <Label>Date: </Label>\n                <DateInput\n\t\t\t        date={date}\n\t\t\t        format='DDMMYYYY'\n\t\t\t        separator='-'\n\t\t\t        onChange={this.handleChangeInputDate}\n\t\t\t    />\n\n                <Button onClick={this.handleUpdateBatch}>Update Batch</Button>\n                <CancelButton href={'/batches/list'}>Cancel</CancelButton>\n            </Wrapper>\n        )\n    }\n\n    render() {\n        const { name, date, heat } = this.state\n        return (\n            <Wrapper>\n                <Collapsible trigger=\"Create Batch\">\n                    <Grid>\n                        <h5>Batch Information</h5>\n                        <Row>\n                            <Col xs={5} >\n                                <InputText\n                                    type=\"text\"\n                                    placeholder=\"Batch name\"\n                                    value={name}\n                                    onChange={this.handleChangeInputName}\n                                    onKeyDown={this.handleKeyDown}\n                                />\n                            </Col>\n                            <Col xs={5} xsOffset={2} >\n                                <DateInput\n                                    date={date}\n                                    format='DDMMYYYY'\n                                    separator='-'\n                                    onChange={this.handleChangeInputDate}\n                                />\n                            </Col>\n                        </Row>\n                        <p></p>\n                        <h5>Heat (Mild &lt;-&gt; Spicy)</h5>\n                        <Row>                            \n                            <Col xs={5} >\n                                <ReactSlider\n                                    className=\"horizontal-slider\"\n                                    value={heat}\n                                    onChange={this.handleChangeHeat}\n                                    renderTrack={Track}\n                                    renderThumb={Thumb}\n                                />\n                            </Col>\n                        </Row>\n                    </Grid>\n\n                    <Grid>\n                        <p></p>\n                        <h5>Ingredients</h5>\n                        <Row>\n                            <Col xs={6} >\n                                <IngredientTable onIngredientsChange={this.handleChangeIngredients}/>\n                            </Col>\n                        </Row>                        \n                    </Grid>\n                    \n                    <Grid>\n                        <Row>\n                        <Col xs={2} >\n                            <Button onClick={this.handleIncludeBatch} >Create</Button>\n                        </Col>\n                        </Row>\n                    </Grid>\n\n                </Collapsible>\n\n                <p></p>\n\n            </Wrapper>\n        )\n    }\n}\n\nexport default BatchUpdate"]},"metadata":{},"sourceType":"module"}