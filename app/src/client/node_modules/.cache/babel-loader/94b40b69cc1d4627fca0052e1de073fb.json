{"ast":null,"code":"var _jsxFileName = \"/Users/francis/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx\";\nimport React, { Component } from 'react';\nimport DateInput from 'react-input-date';\nimport api from '../api';\nimport moment from 'moment';\nimport Collapsible from 'react-collapsible';\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport ReactSlider from 'react-slider';\nimport styled from 'styled-components';\nimport IngredientTable from '../components/IngredientTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h2.attrs({\n  className: 'h2'\n})``;\n_c = Title;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 0 30px;\n`;\n_c2 = Wrapper;\nconst Label = styled.label`\n    margin: 5px;\n`;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\n_c3 = InputText;\nconst InputTextArea = styled.textarea.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\n_c4 = InputTextArea;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c5 = Button;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c6 = CancelButton;\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 25px;\n`;\nconst StyledThumb = styled.div`\n    height: 25px;\n    line-height: 25px;\n    width: 25px;\n    text-align: center;\n    background-color: #000;\n    color: #fff;\n    border-radius: 50%;\n    cursor: grab;\n`;\n_c7 = StyledThumb;\n\nconst Thumb = (props, state) => /*#__PURE__*/_jsxDEV(StyledThumb, { ...props,\n  children: state.valueNow\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 33\n}, this);\n\n_c8 = Thumb;\nconst StyledTrack = styled.div`\n    top: 0;\n    bottom: 0;\n    background: ${props => props.index === 2 ? '#ff0000' : props.index === 1 ? '#ff0000' : '#ff0000'};\n    border-radius: 999px;\n`;\n_c9 = StyledTrack;\n\nconst Track = (props, state) => /*#__PURE__*/_jsxDEV(StyledTrack, { ...props,\n  index: state.index\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 33\n}, this);\n\n_c10 = Track;\n\nclass BatchUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputNotes = async event => {\n      const notes = event.target.value;\n      this.setState({\n        notes\n      });\n    };\n\n    this.handleChangeInputDate = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.handleChangeIngredients = async ingredientsList => {\n      debugger;\n      this.setState({\n        ingredients: ingredientsList\n      });\n    };\n\n    this.handleChangeHeat = async newHeat => {\n      this.setState({\n        heat: newHeat\n      });\n    };\n\n    this.handleCancel = async () => {\n      window.location = '/batches';\n    };\n\n    this.handleUpdateBatch = async () => {\n      const {\n        id,\n        name,\n        date,\n        notes,\n        ingredients,\n        heat\n      } = this.state;\n      var payload = {\n        name,\n        date,\n        notes,\n        ingredients,\n        heat\n      };\n      await api.updateBatchById(id, payload).then(res => {\n        window.location = '/batches';\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        id\n      } = this.state;\n      const batch = await api.getBatchById(id);\n      var now = new Date();\n      var dateString = moment(now).format('DD-MM-YYYY');\n      this.setState({\n        name: batch.data.data.name,\n        date: dateString,\n        notes: batch.data.data.notes || '',\n        heat: batch.data.data.heat || 0,\n        ingredients: batch.data.data.ingredients || []\n      });\n    };\n\n    var _now = new Date();\n\n    var _dateString = moment(_now).format('DD-MM-YYYY');\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      date: _dateString,\n      notes: '',\n      heat: 0,\n      ingredients: []\n    };\n  }\n\n  render() {\n    const {\n      name,\n      date,\n      notes,\n      heat\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Edit Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Batch Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              type: \"text\",\n              placeholder: \"Batch name\",\n              value: name,\n              onChange: this.handleChangeInputName,\n              onKeyDown: this.handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(DateInput, {\n              date: date,\n              format: \"DDMMYYYY\",\n              separator: \"-\",\n              onChange: this.handleChangeInputDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(InputTextArea, {\n              placeholder: \"Notes\",\n              value: this.state.notes,\n              onChange: this.handleChangeInputNotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Heat (Mild <-> Spicy)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(ReactSlider, {\n              className: \"horizontal-slider\",\n              value: heat,\n              onChange: this.handleChangeHeat,\n              renderTrack: Track,\n              renderThumb: Thumb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(IngredientTable, {\n              onIngredientsChange: this.handleChangeIngredients,\n              batchId: this.state.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleUpdateBatch,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(CancelButton, {\n              onClick: this.handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BatchUpdate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"InputText\");\n$RefreshReg$(_c4, \"InputTextArea\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"CancelButton\");\n$RefreshReg$(_c7, \"StyledThumb\");\n$RefreshReg$(_c8, \"Thumb\");\n$RefreshReg$(_c9, \"StyledTrack\");\n$RefreshReg$(_c10, \"Track\");","map":{"version":3,"sources":["/Users/francis/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx"],"names":["React","Component","DateInput","api","moment","Collapsible","Grid","Row","Col","ReactSlider","styled","IngredientTable","Title","h2","attrs","className","Wrapper","div","Label","label","InputText","input","InputTextArea","textarea","Button","button","CancelButton","a","StyledSlider","StyledThumb","Thumb","props","state","valueNow","StyledTrack","index","Track","BatchUpdate","constructor","handleChangeInputName","event","name","target","value","setState","handleChangeInputNotes","notes","handleChangeInputDate","newDate","date","handleChangeIngredients","ingredientsList","ingredients","handleChangeHeat","newHeat","heat","handleCancel","window","location","handleUpdateBatch","id","payload","updateBatchById","then","res","componentDidMount","batch","getBatchById","now","Date","dateString","format","data","match","params","render","handleKeyDown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DateInput from 'react-input-date'\nimport api from '../api'\nimport moment from 'moment';\nimport Collapsible from 'react-collapsible';\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport ReactSlider from 'react-slider'\n\nimport styled from 'styled-components'\nimport IngredientTable from '../components/IngredientTable';\n\nconst Title = styled.h2.attrs({\n    className: 'h2',\n})``\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 0 30px;\n`\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\nconst InputTextArea = styled.textarea.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst StyledSlider = styled(ReactSlider)`\n    width: 100%;\n    height: 25px;\n`;\n\nconst StyledThumb = styled.div`\n    height: 25px;\n    line-height: 25px;\n    width: 25px;\n    text-align: center;\n    background-color: #000;\n    color: #fff;\n    border-radius: 50%;\n    cursor: grab;\n`;\n\nconst Thumb = (props, state) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\n\nconst StyledTrack = styled.div`\n    top: 0;\n    bottom: 0;\n    background: ${props => props.index === 2 ? '#ff0000' : props.index === 1 ? '#ff0000' : '#ff0000'};\n    border-radius: 999px;\n`;\n\nconst Track = (props, state) => <StyledTrack {...props} index={state.index} />;\n\nclass BatchUpdate extends Component {\n    constructor(props) {\n        super(props)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            date: dateString,\n            notes: '',\n            heat: 0,\n            ingredients: []\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputNotes = async event => {\n        const notes = event.target.value\n        this.setState({ notes })\n    }\n\n    handleChangeInputDate = (newDate) => {\n        this.setState({ date: newDate })\n    }\n\n    handleChangeIngredients = async ingredientsList => {\n        debugger;\n        this.setState({ ingredients: ingredientsList })\n    }\n\n    handleChangeHeat = async newHeat => {\n        this.setState({ heat: newHeat })\n    }\n\n    handleCancel = async () => {\n        window.location = '/batches'\n    }\n\n    handleUpdateBatch = async () => {\n        const { id, name, date, notes, ingredients, heat} = this.state\n        var payload = { name, date, notes, ingredients, heat }        \n\n        await api.updateBatchById(id, payload).then(res => {\n            window.location = '/batches'\n        })\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.state\n        const batch = await api.getBatchById(id)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        this.setState({\n            name: batch.data.data.name,\n            date: dateString,\n            notes: batch.data.data.notes || '',\n            heat: batch.data.data.heat || 0,\n            ingredients: batch.data.data.ingredients || [],\n        })\n    }\n\n    render() {\n        const { name, date, notes, heat } = this.state\n        return (\n            <Wrapper>  \n                <Title>Edit Batch</Title>              \n                <Grid>\n                    <h5>Batch Information</h5>\n                    <Row>\n                        <Col xs={5} >\n                            <InputText\n                                type=\"text\"\n                                placeholder=\"Batch name\"\n                                value={name}\n                                onChange={this.handleChangeInputName}\n                                onKeyDown={this.handleKeyDown}\n                            />\n                        </Col>\n                        <Col xs={5} >\n                            <DateInput\n                                date={date}\n                                format='DDMMYYYY'\n                                separator='-'\n                                onChange={this.handleChangeInputDate}\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={12} >\n                            <InputTextArea  placeholder=\"Notes\" value={this.state.notes} onChange={this.handleChangeInputNotes} />\n                        </Col>\n                    </Row>\n                    <p></p>\n                    <h5>Heat (Mild &lt;-&gt; Spicy)</h5>\n                    <Row>                            \n                        <Col xs={2} >\n                            <ReactSlider\n                                className=\"horizontal-slider\"\n                                value={heat}\n                                onChange={this.handleChangeHeat}\n                                renderTrack={Track}\n                                renderThumb={Thumb}\n                            />\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <Grid>\n                    <p></p>\n                    <h5>Ingredients</h5>\n                    <Row>\n                        <Col xs={6} >\n                            <IngredientTable onIngredientsChange={this.handleChangeIngredients} batchId={this.state.id} />\n                        </Col>\n                    </Row>                        \n                </Grid>\n                \n                <Grid>\n                    <Row>\n                    <Col xs={2} >\n                        <Button onClick={this.handleUpdateBatch} >Save</Button>\n                    </Col>\n                    <Col xs={2}>\n                        <CancelButton onClick={this.handleCancel} >Cancel</CancelButton>\n                    </Col>\n                    </Row>\n                </Grid>\n                <p></p>\n            </Wrapper>\n        )\n    }\n}\n\nexport default BatchUpdate"]},"metadata":{},"sourceType":"module"}