{"ast":null,"code":"var _jsxFileName = \"/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport DateInput from 'react-input-date';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h1.attrs({\n  className: 'h1'\n})``;\n_c = Title;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 0 30px;\n`;\n_c2 = Wrapper;\nconst Label = styled.label`\n    margin: 5px;\n`;\n_c3 = Label;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\n_c4 = InputText;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c5 = Button;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c6 = CancelButton;\n\nclass BatchUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputDate = newDate => {\n      this.setState({\n        date: newDate\n      });\n    };\n\n    this.handleUpdateBatch = async () => {\n      const {\n        id,\n        name,\n        date\n      } = this.state;\n      const payload = {\n        name,\n        date\n      };\n      var now = new Date();\n      var dateString = moment(now).format('DD-MM-YYYY');\n      await api.updateBatchById(id, payload).then(res => {\n        window.alert(`Batch updated successfully`);\n        this.setState({\n          name: '',\n          date: dateString\n        });\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        id\n      } = this.state;\n      const batch = await api.getBatchById(id);\n      var now = new Date();\n      var dateString = moment(now).format('DD-MM-YYYY');\n      debugger;\n      this.setState({\n        name: batch.data.data.name,\n        date: dateString\n      });\n    };\n\n    var _now = new Date();\n\n    var _dateString = moment(_now).format('DD-MM-YYYY');\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      date: _dateString\n    };\n  }\n\n  render() {\n    const {\n      name,\n      date\n    } = this.state;\n    debugger;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Update Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        type: \"text\",\n        value: name,\n        onChange: this.handleChangeInputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        date: date,\n        format: \"DDMMYYYY\",\n        separator: \"-\",\n        onChange: this.handleChangeInputDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleUpdateBatch,\n        children: \"Update Batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n        href: '/batches/list',\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BatchUpdate;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"InputText\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"CancelButton\");","map":{"version":3,"sources":["/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchUpdate.jsx"],"names":["React","Component","api","DateInput","moment","styled","Title","h1","attrs","className","Wrapper","div","Label","label","InputText","input","Button","button","CancelButton","a","BatchUpdate","constructor","props","handleChangeInputName","event","name","target","value","setState","handleChangeInputDate","newDate","date","handleUpdateBatch","id","state","payload","now","Date","dateString","format","updateBatchById","then","res","window","alert","componentDidMount","batch","getBatchById","data","match","params","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\nimport DateInput from 'react-input-date'\nimport moment from 'moment';\n\nimport styled from 'styled-components'\n\nconst Title = styled.h1.attrs({\n    className: 'h1',\n})``\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 0 30px;\n`\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nclass BatchUpdate extends Component {\n    constructor(props) {\n        super(props)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            date: dateString,\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputDate = (newDate) => {\n        this.setState({ date: newDate })\n    }\n\n    handleUpdateBatch = async () => {\n        const { id, name, date } = this.state\n        const payload = { name, date }\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\n        await api.updateBatchById(id, payload).then(res => {\n            window.alert(`Batch updated successfully`)\n            this.setState({\n                name: '',\n                date: dateString,\n            })\n        })\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.state\n        const batch = await api.getBatchById(id)\n\n        var now = new Date();\n\t\tvar dateString = moment(now).format('DD-MM-YYYY');\n\t\t\n\t\tdebugger;\n        this.setState({\n            name: batch.data.data.name,\n            date: dateString,\n        })\n    }\n\n    render() {\n        const { name, date } = this.state\n        debugger;\n        return (\n            <Wrapper>\n                <Title>Update Batch</Title>\n\n                <Label>Name: </Label>\n                <InputText\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChangeInputName}\n                />\n\n                <Label>Date: </Label>\n                <DateInput\n\t\t\t        date={date}\n\t\t\t        format='DDMMYYYY'\n\t\t\t        separator='-'\n\t\t\t        onChange={this.handleChangeInputDate}\n\t\t\t    />\n\n                <Button onClick={this.handleUpdateBatch}>Update Batch</Button>\n                <CancelButton href={'/batches/list'}>Cancel</CancelButton>\n            </Wrapper>\n        )\n    }\n}\n\nexport default BatchUpdate"]},"metadata":{},"sourceType":"module"}