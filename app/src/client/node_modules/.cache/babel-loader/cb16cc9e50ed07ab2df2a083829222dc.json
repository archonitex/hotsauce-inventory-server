{"ast":null,"code":"var _jsxFileName = \"/Users/francis/Development/hotsauce-inventory/app/src/client/src/pages/BatchesList.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport moment from 'moment';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n_c = Wrapper;\nconst BlockSpan = styled.span`\n    display: block;\n`;\nconst Update = styled.div`\n    float: left;\n    color: #ef9b0f;\n    cursor: pointer;\n    padding-left: 10pt;\n    font-size: '20px';\n`;\n_c2 = Update;\nconst Print = styled.div`\n    float: left;\n    color: #34a1eb;\n    cursor: pointer;\n    padding-left: 10pt;\n`;\n_c3 = Print;\nconst Delete = styled.div`\n    float: left;\n    color: #ff0000;\n    cursor: pointer;\n    padding-left: 10pt;\n`;\n_c4 = Delete;\n\nclass PrintBatchLabel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.printUser = event => {\n      event.preventDefault();\n      const copies = prompt('Print how many copies?', \"1\");\n\n      if (copies != null) {\n        const copiesInt = parseInt(copies);\n        var payload = {\n          copies: copiesInt\n        };\n        api.printBatchById(this.props.id, payload).then(res => {\n          console.log(\"Printing...\");\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Print, {\n      onClick: this.printUser,\n      children: \"\\uD83D\\uDDA8\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass UpdateBatch extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/batches/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"\\u270F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteBatch extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do tou want to delete the batch ${this.props.name} permanently?`)) {\n        api.deleteBatchById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"\\uD83D\\uDCA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass BatchesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllBatches().then(batches => {\n        this.setState({\n          batches: batches.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      batches: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      batches,\n      isLoading\n    } = this.state;\n    console.log('TCL: BatchesList -> render -> batches', batches);\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true,\n      Cell: ({\n        value\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }, this)\n    }, {\n      Header: 'Date',\n      accessor: 'date',\n      filterable: false,\n      Cell: ({\n        value\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: moment(value).format('ll')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 38\n      }, this)\n    }, {\n      Header: 'Actions',\n      accessor: '',\n      Cell: function (props) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(DeleteBatch, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(UpdateBatch, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PrintBatchLabel, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    let showTable = true;\n\n    if (batches && !batches.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: showTable && /*#__PURE__*/_jsxDEV(ReactTable, {\n        data: batches,\n        columns: columns,\n        loading: isLoading,\n        defaultPageSize: 10,\n        showPageSizeOptions: true,\n        minRows: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BatchesList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Update\");\n$RefreshReg$(_c3, \"Print\");\n$RefreshReg$(_c4, \"Delete\");","map":{"version":3,"sources":["/Users/francis/Development/hotsauce-inventory/app/src/client/src/pages/BatchesList.jsx"],"names":["React","Component","api","moment","ReactTable","styled","Wrapper","div","BlockSpan","span","Update","Print","Delete","PrintBatchLabel","printUser","event","preventDefault","copies","prompt","copiesInt","parseInt","payload","printBatchById","props","id","then","res","console","log","render","UpdateBatch","updateUser","window","location","href","DeleteBatch","deleteUser","confirm","name","deleteBatchById","reload","BatchesList","constructor","componentDidMount","setState","isLoading","getAllBatches","batches","data","state","columns","Header","accessor","filterable","Cell","value","textAlign","format","float","original","_id","showTable","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\nimport moment from 'moment';\n\nimport ReactTable from \"react-table-6\"\nimport \"react-table-6/react-table.css\"\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst BlockSpan = styled.span`\n    display: block;\n`\n\nconst Update = styled.div`\n    float: left;\n    color: #ef9b0f;\n    cursor: pointer;\n    padding-left: 10pt;\n    font-size: '20px';\n`\n\nconst Print = styled.div`\n    float: left;\n    color: #34a1eb;\n    cursor: pointer;\n    padding-left: 10pt;\n`\n\nconst Delete = styled.div`\n    float: left;\n    color: #ff0000;\n    cursor: pointer;\n    padding-left: 10pt;\n`\n\nclass PrintBatchLabel extends Component {\n    printUser = event => {\n        event.preventDefault()\n\n        const copies = prompt('Print how many copies?', \"1\")\n        if(copies != null){\n            const copiesInt = parseInt(copies);\n\n            var payload = { copies: copiesInt }\n            \n            api.printBatchById(this.props.id, payload).then(res => {\n                console.log(\"Printing...\")\n            })\n        }        \n    }\n\n    render() {\n        return <Print onClick={this.printUser}>🖨️</Print>\n    }\n}\n\nclass UpdateBatch extends Component {\n    updateUser = event => {\n        event.preventDefault()\n\n        window.location.href = `/batches/update/${this.props.id}`\n    }\n\n    render() {\n        return <Update onClick={this.updateUser}>✏</Update>\n    }\n}\n\nclass DeleteBatch extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do tou want to delete the batch ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteBatchById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>💣</Delete>\n    }\n}\n\nclass BatchesList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            batches: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllBatches().then(batches => {\n            this.setState({\n                batches: batches.data.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    render() {\n        const { batches, isLoading } = this.state\n        console.log('TCL: BatchesList -> render -> batches', batches)\n\n        const columns = [\n            {\n                Header: 'Name',\n                accessor: 'name',\n                filterable: true,\n                Cell: ({ value }) => <div style={{ textAlign: \"center\" }}>{value}</div>\n            },\n            {\n                Header: 'Date',\n                accessor: 'date',\n                filterable: false,\n                Cell: ({ value }) => <div style={{ textAlign: \"center\" }}>{moment(value).format('ll')}</div>\n            },\n            {\n                Header: 'Actions',\n                accessor: '',\n                Cell: function(props) {\n                    return (\n                        <div style={{ float: \"right\" }}>\n                            <DeleteBatch id={props.original._id} />\n                            <UpdateBatch id={props.original._id} />\n                            <PrintBatchLabel id={props.original._id} />\n                        </div>\n                    )\n                },\n            },\n        ]\n\n        let showTable = true\n        if (batches && !batches.length) {\n            showTable = false\n        }\n\n        return (\n            <Wrapper>\n                {showTable && (\n                    <ReactTable\n                        data={batches}\n                        columns={columns}\n                        loading={isLoading}\n                        defaultPageSize={10}\n                        showPageSizeOptions={true}\n                        minRows={0}\n                    />\n                )}\n            </Wrapper>\n        )\n    }\n}\n\nexport default BatchesList"]},"metadata":{},"sourceType":"module"}