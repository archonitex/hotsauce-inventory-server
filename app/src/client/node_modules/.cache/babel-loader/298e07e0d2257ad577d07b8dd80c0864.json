{"ast":null,"code":"var _jsxFileName = \"/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchesList.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n_c = Wrapper;\nconst BlockSpan = styled.span`\n    display: block;\n`;\n_c2 = BlockSpan;\nconst Update = styled.div`\n    float: left;\n    color: #ef9b0f;\n    cursor: pointer;\n    padding-left: 10pt;\n`;\n_c3 = Update;\nconst Print = styled.div`\n    float: left;\n    color: #34a1eb;\n    cursor: pointer;\n    padding-left: 10pt;\n`;\n_c4 = Print;\nconst Delete = styled.div`\n    float: left;\n    color: #ff0000;\n    cursor: pointer;\n    padding-left: 10pt;\n`;\n_c5 = Delete;\n\nclass PrintBatchLabel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.printUser = event => {\n      event.preventDefault();\n      api.printBatchById(this.props.id).then(res => {\n        window.dymoPrint(res.data.data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Print, {\n      onClick: this.printUser,\n      children: \"\\uD83D\\uDDA8\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass UpdateBatch extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/batches/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"\\u270F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteBatch extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do tou want to delete the batch ${this.props.name} permanently?`)) {\n        api.deleteBatchById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"\\uD83D\\uDCA3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass BatchesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllBatches().then(batches => {\n        this.setState({\n          batches: batches.data.data,\n          isLoading: false\n        });\n      });\n      const dymoSDKScript = document.createElement(\"script\");\n      dymoSDKScript.src = \"http://labelwriter.com/software/dls/sdk/js/DYMO.Label.Framework.latest.js\";\n      dymoSDKScript.async = true;\n      document.body.appendChild(dymoSDKScript);\n      const dymoPrintScript = document.createElement(\"script\");\n      dymoPrintScript.innerHTML = 'function dymoPrint(r){try{var e=dymo.label.framework.openLabelXml(r),t=dymo.label.framework.getPrinters();if(0==t.length)throw\"No DYMO printers are installed. Install DYMO printers.\";for(var a=\"\",l=0;l<t.length;++l){var n=t[l];if(\"LabelWriterPrinter\"==n.printerType){a=n.name;break}}if(\"\"==a)throw\"No LabelWriter printers found. Install LabelWriter printer\";alert(\"PRINTING TO \"+a),e.print(a)}catch(r){alert(r.message||r)}}';\n      document.body.appendChild(dymoPrintScript);\n    };\n\n    this.state = {\n      batches: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      batches,\n      isLoading\n    } = this.state;\n    console.log('TCL: BatchesList -> render -> batches', batches);\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name',\n      filterable: true\n    }, {\n      Header: 'Date',\n      accessor: 'date',\n      filterable: true\n    }, {\n      Header: 'Actions',\n      accessor: '',\n      Cell: function (props) {\n        return /*#__PURE__*/_jsxDEV(BlockSpan, {\n          children: [/*#__PURE__*/_jsxDEV(DeleteBatch, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(UpdateBatch, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PrintBatchLabel, {\n            id: props.original._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this);\n      }\n    }];\n    let showTable = true;\n\n    if (!batches.length || true) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: showTable && /*#__PURE__*/_jsxDEV(ReactTable, {\n        data: batches,\n        columns: columns,\n        loading: isLoading,\n        defaultPageSize: 10,\n        showPageSizeOptions: true,\n        minRows: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BatchesList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"BlockSpan\");\n$RefreshReg$(_c3, \"Update\");\n$RefreshReg$(_c4, \"Print\");\n$RefreshReg$(_c5, \"Delete\");","map":{"version":3,"sources":["/home/archon/Development/hotsauce-inventory/app/src/client/src/pages/BatchesList.jsx"],"names":["React","Component","api","ReactTable","styled","Wrapper","div","BlockSpan","span","Update","Print","Delete","PrintBatchLabel","printUser","event","preventDefault","printBatchById","props","id","then","res","window","dymoPrint","data","render","UpdateBatch","updateUser","location","href","DeleteBatch","deleteUser","confirm","name","deleteBatchById","reload","BatchesList","constructor","componentDidMount","setState","isLoading","getAllBatches","batches","dymoSDKScript","document","createElement","src","async","body","appendChild","dymoPrintScript","innerHTML","state","columns","console","log","Header","accessor","filterable","Cell","original","_id","showTable","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\n\nimport ReactTable from \"react-table-6\"\nimport \"react-table-6/react-table.css\"\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst BlockSpan = styled.span`\n    display: block;\n`\n\nconst Update = styled.div`\n    float: left;\n    color: #ef9b0f;\n    cursor: pointer;\n    padding-left: 10pt;\n`\n\nconst Print = styled.div`\n    float: left;\n    color: #34a1eb;\n    cursor: pointer;\n    padding-left: 10pt;\n`\n\nconst Delete = styled.div`\n    float: left;\n    color: #ff0000;\n    cursor: pointer;\n    padding-left: 10pt;\n`\n\nclass PrintBatchLabel extends Component {\n    printUser = event => {\n        event.preventDefault()\n\n        api.printBatchById(this.props.id).then(res => {\n            window.dymoPrint(res.data.data)\n        })\n    }\n\n    render() {\n        return <Print onClick={this.printUser}>🖨️</Print>\n    }\n}\n\nclass UpdateBatch extends Component {\n    updateUser = event => {\n        event.preventDefault()\n\n        window.location.href = `/batches/update/${this.props.id}`\n    }\n\n    render() {\n        return <Update onClick={this.updateUser}>✏</Update>\n    }\n}\n\nclass DeleteBatch extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do tou want to delete the batch ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteBatchById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>💣</Delete>\n    }\n}\n\nclass BatchesList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            batches: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllBatches().then(batches => {\n            this.setState({\n                batches: batches.data.data,\n                isLoading: false,\n            })\n        })\n\n        const dymoSDKScript = document.createElement(\"script\");\n        dymoSDKScript.src = \"http://labelwriter.com/software/dls/sdk/js/DYMO.Label.Framework.latest.js\";\n        dymoSDKScript.async = true;\n        document.body.appendChild(dymoSDKScript);\n\n        const dymoPrintScript = document.createElement(\"script\");\n        dymoPrintScript.innerHTML = 'function dymoPrint(r){try{var e=dymo.label.framework.openLabelXml(r),t=dymo.label.framework.getPrinters();if(0==t.length)throw\"No DYMO printers are installed. Install DYMO printers.\";for(var a=\"\",l=0;l<t.length;++l){var n=t[l];if(\"LabelWriterPrinter\"==n.printerType){a=n.name;break}}if(\"\"==a)throw\"No LabelWriter printers found. Install LabelWriter printer\";alert(\"PRINTING TO \"+a),e.print(a)}catch(r){alert(r.message||r)}}'\n        document.body.appendChild(dymoPrintScript);\n    }\n\n    render() {\n        const { batches, isLoading } = this.state\n        console.log('TCL: BatchesList -> render -> batches', batches)\n\n        const columns = [\n            {\n                Header: 'Name',\n                accessor: 'name',\n                filterable: true,\n            },\n            {\n                Header: 'Date',\n                accessor: 'date',\n                filterable: true,\n            },\n            {\n                Header: 'Actions',\n                accessor: '',\n                Cell: function(props) {\n                    return (\n                        <BlockSpan>\n                            <DeleteBatch id={props.original._id} />\n                            <UpdateBatch id={props.original._id} />\n                            <PrintBatchLabel id={props.original._id} />\n                        </BlockSpan>\n                    )\n                },\n            },\n        ]\n\n        let showTable = true\n        if (!batches.length || true) {\n            showTable = false\n        }\n\n        return (\n            <Wrapper>\n                {showTable && (\n                    <ReactTable\n                        data={batches}\n                        columns={columns}\n                        loading={isLoading}\n                        defaultPageSize={10}\n                        showPageSizeOptions={true}\n                        minRows={0}\n                    />\n                )}\n            </Wrapper>\n        )\n    }\n}\n\nexport default BatchesList"]},"metadata":{},"sourceType":"module"}